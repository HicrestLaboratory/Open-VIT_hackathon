#include "../include/patch_embed.h"

#include <iostream>

using namespace std;

int main() {
    cout << "Test Patch Embed" << endl;

    vit_float k_data[8*3*3*3] = {
        -88.730, -93.081,  19.316,
        -27.174,  49.940,  37.719,
        -39.020,  86.735,  43.056,

        -11.937,  40.547, -17.649,
         25.842,  84.624,   7.097,
          8.233,  90.428,  84.885,

         84.913,  55.120,  74.480,
        -2.241,  38.433, -17.530,
         58.655, -54.583,  -4.333,



         29.413,  25.298, -53.512,
        -64.908, -53.491, -96.911,
         88.593,  45.439, -22.601,

         30.451, -98.619, -90.090,
         37.800,   8.083, -73.115,
        -99.743,  59.051, -69.488,

        -47.737,  88.094, -83.411,
         71.357,  15.275,  67.462,
         38.708, -64.405,  27.294,



         12.083, -52.698,  74.245,
         19.907,  30.086,  71.090,
        -46.041, -58.810,  63.740,

        -54.943, -24.221,  -8.640,
         98.345,  50.003, -39.889,
         27.074,  -5.487,  82.346,

         94.753,  66.510, -47.038,
         95.468, -66.575,  22.357,
         98.754,  55.686,   4.822,



        -30.965, -49.466, -20.177,
        -29.233, -78.812,  15.309,
        -83.495,  99.341,  40.782,

        -94.861,  65.642, -38.582,
          8.328,  44.350, -25.638,
        -84.217,  75.322,  -6.415,

         46.725,   2.152,  46.278,
         -8.779,  57.138,  56.135,
        -74.049, -88.487,  53.438,



         -2.630, -72.963,  56.555,
         11.010, -47.636,  10.358,
        -75.197,  32.915, -73.366,

        -31.381,  -3.444,  70.352,
        -20.552, -74.075, -70.557,
         62.374, -59.349,  76.740,

         77.752, -31.352,   8.564,
        -74.004,  28.564,   9.775,
        -33.609,  25.998,  63.140,



        -99.265, -57.720,  28.233,
        -75.953, -29.514, -16.720,
         42.485, -97.906, -66.119,

        -92.978, -59.572,  24.809,
        -61.123,  -7.783, -32.180,
         88.633,  87.414, -91.674,

        -83.951, -31.502, -61.103,
         98.899, -39.559,  74.920,
         -0.475, -30.656, -40.841,



         46.087,  83.957,  99.166,
        -82.996, -93.025, -99.918,
         69.672,  -1.628, -71.019,

         59.040,  -5.567, -23.223,
         17.478, -75.988,  -1.184,
         48.975,  22.450,   6.595,

         17.817,  81.462,  -3.339,
         17.241,   5.225,  38.536,
        -20.782, -45.011,  76.046,



        -27.813, -64.398,  28.924,
        -54.210, -49.066,  16.549,
        -97.581,  31.564, -75.405,

          6.526,  61.920, -12.924,
         11.075,  -3.247, -20.403,
        -84.149,  27.273,   3.218,

          0.449,  11.900,  -8.930,
        -75.704, -79.089, -27.307,
        -86.749,  86.090, -33.020
    };
    PictureBatch k(k_data, 8*3*3*3, 8, 3, 3, 3);
    cout << "### k" << endl;
    k.print();

    vit_float b_data[8] = {-96.814, 9.515, -28.606, 84.045, 68.013, -97.364, -24.707, -3.075};
    RowVector b(b_data, 8);
    cout << "### b" << endl;
    b.print();

    vit_float ng_data[8] = {58.576, -63.604, 39.352, 44.173, -6.129, 22.081, -23.061, -15.240};
    RowVector ng(ng_data, 8);
    cout << "### ng" << endl;
    ng.print();

    vit_float nb_data[8] = {-16.154, 4.198, -34.143, 2.215, -72.475, -53.607, -8.689, -30.214};
    RowVector nb(nb_data, 8);
    cout << "### nb" << endl;
    nb.print();

    vit_float x_data[2*3*9*9] = {
          4.331, -80.581,  20.891,  59.280, -55.102, -52.729, -86.093,  72.703, -28.591,
         36.849, -69.260, -70.523, -12.793,  17.444, -65.791,  32.285,  84.994, -98.686,
         43.771,  29.459,  88.093,   8.496,  83.935, -64.277,  14.534,   5.508, -21.926,
        -53.408, -92.816, -29.048,  35.933, -12.533, -27.686, -78.971,  -8.073,  11.023,
        -90.314, -87.864, -60.096,   5.151,  32.543, -83.185,  46.169,  61.969,  45.266,
         64.916,  68.820,   7.936, -96.336, -99.154, -55.148,  88.678,  -6.596,  62.691,
         77.528, -11.259,  71.784,  11.277,  90.984,   1.591,  41.496,  18.751,  51.403,
        -35.560, -32.069,  86.941,  55.848, -86.699, -10.894,  23.669,  -1.278, -46.756,
        -19.328,  70.710,  84.120, -67.115, -72.694, -54.554,  -6.338, -45.485,  98.850,

        -81.852, -27.812, -78.824,  94.563,  41.157, -12.367,  13.588,  67.943,  40.364,
        -92.329, -99.156,  86.991, -93.383, -46.160, -90.091,  15.718,  15.657,  69.040,
         62.681,  44.965,   7.159,  56.774, -92.153, -37.702,  83.942,  -7.332, -59.305,
        -68.979, -45.227, -92.204, -83.414, -30.902,  57.136, -78.906,  12.470,   9.339,
        -55.045,  -7.929, -31.355,   3.835, -37.100,  79.473,  92.108,  46.796, -30.676,
         88.872,  90.636,  54.969,  16.338, -75.786,  45.240,  46.523, -79.954, -76.263,
         53.660, -67.246,  -7.755,  94.126, -29.318, -31.994, -94.726,  57.293,  62.970,
        -21.722, -30.768,  92.464,  47.660,  27.629, -18.000,  67.905, -14.915, -75.160,
        -21.458,   0.850,   9.546, -38.282,  88.526,   7.535, -71.701,  73.679, -26.444,

        38.213, -78.117, -76.558, -67.867,  97.676,  58.044,  46.521,  -3.886, -70.774,
          7.551,  -8.768,  -0.171,   5.159,  76.543, -56.519,  76.110,  80.876,  17.192,
         15.610,  62.008, -95.821,  68.182, -79.625,  34.017,  17.694, -47.620,  34.172,
        -18.202, -36.839,   5.733,  48.756,  -5.878,  87.252, -28.882,  97.228,  13.068,
        -57.135,  72.437,  36.921,  57.213,  35.288,  19.898,  80.545,  89.963,  88.961,
         92.579, -34.539,  12.915, -96.821,  49.423,  87.221, -39.861,  36.366, -50.769,
        -85.008,  38.237, -78.583, -80.427,  81.129,  22.857,  81.531,  60.476, -46.508,
         20.100,   4.174,  46.550,  -6.862,  33.979, -12.110, -92.874,  44.329, -70.896,
         69.364,  42.249,  32.805,  -5.522, -45.768,  80.226,  22.682,  41.706,  90.035,



        -37.820,  33.077,   0.256,  37.946, -51.970, -67.732, -99.723, -47.815,  35.256,
         -6.184,  38.110,  88.777,  55.116,  -5.896,  44.042, -93.272,  31.644, -55.087,
         27.236, -13.559, -48.797, -48.809, -94.204,  35.054, -97.819,  80.703,   3.400,
        -93.295, -54.977,  89.360,  45.993,  53.748,  12.328, -23.969,  97.564, -17.448,
        -72.213, -86.207, -94.119,  79.184, -78.604,  39.427,  99.433,   9.213,  -0.235,
         52.742,  48.590, -96.871,  81.923,  56.694,  -6.146, -23.039,  80.763, -77.348,
        -14.965,  89.828,  74.151,  49.083, -33.078,  41.293,  33.850,  84.793,  94.480,
         21.612, -88.861,  82.155,   3.442,  68.481,  27.021, -40.103,  52.852, -97.400,
         81.265,  52.820, -19.356,  79.941, -96.902,  85.890, -47.348, -31.633,  43.943,

        -98.821, -69.902, -15.087,   8.972,  22.061, -40.141, -92.931, -11.749,  28.189,
          2.109,  37.483,  18.695,  54.627,  65.276,  86.224,  72.363, -59.992,  81.345,
         -0.855,  43.162,   5.204,  27.923,  82.022, -31.387, -67.215, -53.621,  -5.972,
          9.339,   0.832,  90.834,  69.378,  26.955,  -8.716,  78.409, -69.764, -15.182,
        -29.223, -64.675,  86.129, -33.505, -56.260,  10.077,  62.332, -49.303,  15.040,
         18.065,  62.164,  35.867,   9.539, -82.569,  32.096,  53.012,  99.149, -34.830,
         -2.312,  50.620, -11.212, -50.428,  82.843,  34.432,  68.442,   7.451,  -3.007,
         42.609, -52.782, -73.495, -70.345,  58.981, -42.240,  39.222, -20.131, -78.952,
        -68.380,   6.147,  59.459,  -1.574, -73.983,   0.998,  80.763,  54.310, -27.961,

         48.271, -21.585, -60.041,  20.350, -99.212,   4.651, -19.649,  80.559, -21.151,
         56.659,  66.687,  76.469,  72.017, -22.844,  90.344,  23.728,  70.194,  11.536,
         84.477,  44.972,  88.878,  11.603, -96.580,  42.984,  37.546, -10.372,  50.727,
         -2.900,  88.169,  20.322,   0.090, -75.514, -69.116, -23.171, -54.631,  24.190,
         55.183,  97.461,  63.399,  81.415,  12.416,  85.283, -64.218,  13.327,  66.687,
        -81.501, -49.371,  15.856, -66.861, -79.121,  99.704,  -3.138,  77.537, -39.014,
          7.350,  16.695,  72.435, -77.277, -74.559, -38.696,  -9.179,   5.915,   9.098,
         63.440, -81.730,  52.738, -43.638, -39.950,  87.473, -12.099,  82.361, -21.801,
         44.867,   6.878,  98.599, -64.293,  96.124,  -4.289,   5.212,  39.614,  60.995
    };
    PictureBatch x(x_data, 2*3*9*9, 2, 3, 9, 9);
    cout << "### x" << endl;
    x.print();

    Conv2d c2d(3, 8, 3, 3, 3, 3, true);
    c2d.move_kernel(k);
    c2d.move_bias(b);
    LayerNorm ln(8, 0.00001, true);
    ln.move_g(ng);
    ln.move_b(nb);
    PatchEmbed pe(9, 9, 3, 3, 3, 8, true, false, true, true);
    pe.move_c2d(c2d);
    pe.move_norm(ln);

    Tensor y;
    pe.forward(x, y);
    cout << "### y" << endl;
    y.print();

    vit_float x2_data[2*3*7*8] = {
        -26.580,   3.707,  18.809,  18.811,   2.670,  27.475, -92.082,  90.587,
         99.997, -62.297,  94.166,  55.260, -26.858,  22.330,  12.134,  44.109,
        -40.843,  -2.350,  72.975,  41.542,   8.121, -10.869, -68.105,  20.548,
         96.454,  68.457,  78.083,  10.231, -36.268,  57.896,  12.153,  45.538,
        -82.296,  18.763,  18.556, -58.060,  -8.864, -46.994, -23.023, -40.277,
         99.058,  19.104, -47.061,  47.571,  61.993, -61.670, -20.823, -69.399,
         40.372, -63.882,   8.671, -15.456, -85.198,  19.575, -66.307, -19.786,

         26.413,  62.056, -74.718,  68.655, -52.632, -41.075,  11.809, -46.445,
         17.247, -35.513, -27.280,  87.290, -45.732,  82.510,  86.482, -83.944,
        -12.417,  88.635,  -4.074, -21.754, -98.633, -46.107, -67.141, -15.897,
         91.538, -51.247, -58.823, -63.122,  28.912, -78.824, -41.095,  40.179,
         23.902,  78.577,  23.389,  37.308, -70.024,  36.660,  -0.081,  10.606,
        -55.934, -49.292, -82.034,  93.037, -20.008,  22.363,  17.643,  -5.921,
         32.462, -12.566, -87.285,  -8.991,  51.308, -12.770, -85.503, -14.666,

         -5.246, -35.961, -80.692,  60.455, -84.847, -42.030, -28.463,  27.053,
        -74.676,  68.830, -90.550,  31.289, -65.348, -57.330, -68.167,  -9.198,
         41.029, -47.769,   3.287, -12.787, -64.265,  39.349, -59.696, -76.710,
        -82.398,  70.463,   2.261, -20.720,  89.018,  70.925,  55.992, -70.046,
         72.139, -16.717, -74.633, -73.797, -41.345, -13.758,  82.016,  94.773,
        -37.291, -63.313,  75.235,  89.664, -18.879, -28.014,  18.728, -93.534,
        -37.753, -20.574,  26.024, -28.396, -61.149,  -2.209, -75.309, -67.072,



         -1.428, -88.631,  31.488, -43.041, -73.303, -79.895,  79.400,  66.651,
         13.872,  61.052,  -8.477, -49.548,  -8.728,  69.374, -11.679,  -9.814,
         -8.535,  -8.006, -24.991,  43.711, -73.444,  84.518,  37.779, -59.776,
         62.386,  76.722, -92.393, -75.413, -17.401, -95.088, -32.188,  42.717,
        -72.434, -39.861, -72.283, -92.305, -43.064,  69.528, -67.037, -78.567,
          8.846,  49.360, -52.544,  52.083,   6.431,  39.523,  62.978, -99.915,
         61.125, -30.003, -97.434, -74.322,   3.722, -49.312,   0.153,  63.433,

        -97.201,  46.473, -94.289,  33.996,  63.840,  46.989,   6.732, -61.761,
         -5.909,  13.243,  -6.906,  33.270,  29.764, -39.781, -22.083, -23.693,
         72.702,  -2.289, -26.585, -23.913, -24.301,  61.789, -32.814, -40.961,
        -53.434, -66.468, -85.937, -56.921, -29.600, -89.554,  44.193,   9.588,
        -59.743, -29.503,  11.711, -33.496, -79.666,  -2.015,  96.613, -49.225,
         28.930, -22.641,  48.856,  -5.720,  34.198, -21.809,   3.403,  87.971,
         -1.595, -57.635, -81.491,  57.456, -73.308,   0.922,  78.922, -14.627,

         28.527, -44.014,  44.340,  41.714,  64.183, -48.185, -37.900,  87.764,
         46.308,  99.311, -80.079, -76.336, -77.375,  53.115,  73.693,  93.567,
         27.475,  14.825,  72.860, -16.934, -35.893, -48.763, -71.987,  70.450,
        -22.721,  74.158, -41.471, -19.578,  -6.949,  23.544, -51.450,  12.163,
         96.389,  18.991, -86.217, -43.755, -30.311, -99.763, -77.835, -88.558,
         34.168, -98.942,  68.842, -91.490, -67.624,   6.560,   0.016, -12.650,
        -71.092,  40.558,  -2.845,  75.238, -74.238, -99.835,  38.956,  91.823
    };
    PictureBatch x2(x2_data, 2*3*7*8, 2, 3, 7, 8);
    cout << "### x2" << endl;
    x2.print();

    Tensor y2;
    pe.forward(x2, y2);
    cout << "### y2" << endl;
    y2.print();

    return 0;
}
